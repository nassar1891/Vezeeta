// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VezeetaAPI.Models;

#nullable disable

namespace VezeetaAPI.Migrations
{
    [DbContext(typeof(VezeetaContext))]
    [Migration("20231210140059_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VezeetaAPI.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK_ApplicationUsers");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("VezeetaAPI.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Bookings");

                    b.HasIndex("PatientId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("VezeetaAPI.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Specialization")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_Doctors");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("VezeetaAPI.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("VezeetaAPI.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Days")
                        .HasColumnType("int");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("VezeetaAPI.Models.TimeSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("TimeSlots");
                });

            modelBuilder.Entity("VezeetaAPI.Models.Booking", b =>
                {
                    b.HasOne("VezeetaAPI.Models.Patient", "Patient")
                        .WithMany("Bookings")
                        .HasForeignKey("PatientId");

                    b.HasOne("VezeetaAPI.Models.Schedule", "Schedule")
                        .WithMany("Bookings")
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Patient");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("VezeetaAPI.Models.Doctor", b =>
                {
                    b.HasOne("VezeetaAPI.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("Doctor")
                        .HasForeignKey("VezeetaAPI.Models.Doctor", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_Doctors_ApplicationUsers");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("VezeetaAPI.Models.Patient", b =>
                {
                    b.HasOne("VezeetaAPI.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("Patient")
                        .HasForeignKey("VezeetaAPI.Models.Patient", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_Patients_ApplicationUsers");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("VezeetaAPI.Models.Schedule", b =>
                {
                    b.HasOne("VezeetaAPI.Models.Doctor", "Doctor")
                        .WithMany("Schedules")
                        .HasForeignKey("DoctorId");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("VezeetaAPI.Models.TimeSlot", b =>
                {
                    b.HasOne("VezeetaAPI.Models.Schedule", "Schedule")
                        .WithMany("TimeSlots")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("VezeetaAPI.Models.ApplicationUser", b =>
                {
                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("VezeetaAPI.Models.Doctor", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("VezeetaAPI.Models.Patient", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("VezeetaAPI.Models.Schedule", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("TimeSlots");
                });
#pragma warning restore 612, 618
        }
    }
}
